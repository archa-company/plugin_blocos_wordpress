window.fbgposts=[];
(l=>{
 const e=l.e.createElement,
  h=l.d.RichText,
  a=l.d.AlignmentToolbar,
  b=l.d.BlockControls,
  p=l.d.useBlockProps,
  j=l.d.InspectorControls,
  v=l.v.PanelBody,
  u=l.v.IconButton,
  z=l.d.ColorPalette,
  m=l.d.MediaUpload,
  o=x=>{
   try{
    return new Date(
     x.replace(/^(\d+-\d+-\d+T\d+:\d+:\d+\.\d+)$/gi,'$1Z')
      .replace(/^(\d+-\d+-\d+T\d+:\d+:\d+)$/gi,'$1.000Z')
    )
   }catch{return new Date()}
  },
  q=(d,l)=>{
   const w=new Date();
   w.setDate(w.getDate()-d);
   return window.fbgposts
    .filter(x=>d>0?x.date.getTime()>w.getTime():true)
    .map(x=>x.title).slice(0,l||100)
  },
  i=()=>{
   let d=new Date().getTime();
   if(typeof performance!=='undefined'&&typeof performance.now==='function')
    d+=performance.now();
   return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'
    .replace(/[xy]/g,c=>{
     const r=(d+Math.random()*16)%16|0;
     d=Math.floor(d/16);
     return(c==='x'?r:(r&0x3|0x8)).toString(16)
    })
  };
 l.b.registerBlockType('fbg-plugin/enquete',{
  title:'Enquete',
  description:'Enquete Pino Lab',
  icon:'feedback',
  category:'fbg-plugin-category',
  attributes:{
   content:{
    type:'string',
    selector:'p',
    default:''
   },
   title:{
    type:'string',
    selector:'h1',
    default:''
   },
   alignment:{
    type:'string',
    default:'none'
   },
   id:{
    type:'string',
    default:''
   },
   temp:{
    type:'string',
    default:''
   },
   list:{
    type:'array',
    default:[]
   },
   button:{
    type:'string',
    default:''
   },
   url:{
    type:'string',
    default:''
   },
   color:{
    type:'string',
    default:''
   },
   backgroundColor:{
    type:'string',
    default:''
   }
  },
  edit:x=>{
  if(!x.attributes.id)x.setAttributes({id:i()});
  return e(
   'div',
   p(),
   e(
    j,
    {style:{marginBottom:40}},
    e(
     v,
     {title:'Identificador'},
     e(
      'div',
      {style:{display:'flex',flexDirection:'row'}},
      e(
       'input',
       {
        value:x.attributes.id,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({id:n.target.value})
       }
      ),
      e(
       'input',
       {
        value:'+',
        style:{padding:'0 8px'},
        type:'button',
        className:'FBGinput',
        onClick:()=>x.setAttributes({id:i()})
       }
      )
     )
    ),
    e(
     v,
     {title:'Opções'},
     e('p',null,'Selecione as opções:'),
     e(
      'div',
      {style:{display:'flex',flexDirection:'row'}},
      e(
       'input',
       {
        value:x.attributes.temp,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({temp:n.target.value}),
        onKeyUp:e=>{
         if('Enter'===event.key){
          x.attributes.list.push(x.attributes.temp);
          x.setAttributes({
           list:x.attributes.list.slice(),
           temp:''
          })
         }
        }
       }
      ),
      e(
       'input',
       {
        value:'+',
        type:'button',
        className:'FBGinput',
        style:{padding:'0 8px'},
        onClick:e=>{
         x.attributes.list.push(x.attributes.temp);
         x.setAttributes({
          list:x.attributes.list.slice(),
          temp:''
         })
        }
       }
      )
     ),
     e(
      'ul',
      {className:'FBGListControls'},
      x.attributes.list.map((l,i)=>
       e(
        'li',
        {key:i},
        e('span',{value:l},l),
        e(
         'span',
         {
          onClick:()=>{
           x.attributes.list.splice(i,1);
           x.setAttributes({list:x.attributes.list.slice()})
          }
         }
        )
       )
      )
     )
    ),
    e(
     v,
     {title:'Cor do Texto'},
     e('p',null,'Selecione a cor do texto:'),
     e(
      z,
      {
       value:x.attributes.color,
       onChange:n=>x.setAttributes({color:n})
      }
     )
    ),
    e(
     v,
     {title:'Cor de Fundo'},
     e('p',null,'Selecione a cor de fundo:'),
     e(
      z,
      {
       value:x.attributes.backgroundColor,
       onChange:n=>x.setAttributes({backgroundColor:n})
      }
     )
    ),
    e(
     v,
     {title:'Envio'},
     e('p',null,'Selecione os dados do envio:'),
     e(
      'div',
      {style:{display:'flex',flexDirection:'column'}},
      'Botão enviar:',
      e(
       'input',
       {
        value:x.attributes.button||'Enviar',
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({button:n.target.value})
       }
      )
     ),
     e(
      'div',
      {style:{display:'flex',flexDirection:'column'}},
      'Url de envio:',
      e(
       'input',
       {
        value:x.attributes.url,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({url:n.target.value})
       }
      )
     )
    )
   ),
   e(
    b,
    {
     key:'controls'
    },
    e(a,{
     value:x.attributes.alignment,
     onChange:n=>x.setAttributes({alignment:n===undefined?'none':n})
    })
   ),
   e(
    'div',
    {
     style:{
      display:'flex',
      flexDirection:'column',
      alignItems:({left:'flex-start',center:'center',right:'flex-end'})[x.attributes.alignment],
      backgroundColor:x.attributes.backgroundColor||'silver',
      color:x.attributes.color||'black',
      borderRadius:4,
      padding:'0 12px 12px 12px',
      margin:'16px 0 0 0'
     }
    },
    e(
     h,
     {
      key:'FBGrichtextTitle',
      tagName:'h1',
      style:{
       margin:0,
       padding:0,
       fontSize:32,
       color:x.attributes.color,
       textAlign:x.attributes.alignment,
       position:'relative',
       marginTop:'-24px'
      },
      onChange:n=>x.setAttributes({title:n}),
      value:x.attributes.title,
      placeholder:'Enquete'
    }),
    e(
     h,
     {
      key:'FBGrichtextText',
      tagName:'p',
      style:{
       textAlign:x.attributes.alignment,
       color:x.attributes.color,
       margin:0,
       padding:0
      },
      onChange:n=>x.setAttributes({content:n}),
      value:x.attributes.content,
      placeholder:'Pergunta?'
    }),
    e(
     'ul',
     {style:{listStyle:'none'}},
     x.attributes.list.map(l=>
      e(
       'li',
       {
        style:{
         color:x.attributes.color,
         textAlign:x.attributes.alignment
        },
        key:l
       },
       e(
        'input',
        {
         scale:'1.5',
         accentColor:'#ff7f00',
         type:'radio',
         name:'choice',
         value:l
        }
       ),
       e('span',{style:{marginLeft:8}},l)
      )
     )
    ),
    e(
     'div',
     {style:{display:'flex',flexDirection:'row',justifyContent:({left:'flex-start',center:'center',right:'flex-end'})[x.attributes.alignment]||'flex-end'}},
     e(
      'input',
      {
       type:'button',
       style:{
        borderRadius:5,
        cursor:'pointer',
        backgroundColor:'white',
        minHeight:30,
        lineHeight:1,
        outline:0,
        fontSize:'12pt',
        color:'#ff7f00',
        border:'1px solid #808080'
       },
       value:x.attributes.button||'Enviar'
      }
     )
    )
   )
  )
  },
  save:x=>e(
   'div',
   p.save()
  )
 });
 l.b.registerBlockType('fbg-plugin/newsletter',{
  title:'Formulário',
  description:'newsletter',
  icon:'email-alt',
  category:'fbg-plugin-category',
  attributes:{
   content:{
    type:'string',
    selector:'p',
    default:''
   },
   title:{
    type:'string',
    selector:'h1',
    default:''
   },
   alignment:{
    type:'string',
    default:'none'
   },
   temp1:{
    type:'string',
    default:''
   },
   temp2:{
    type:'string',
    default:''
   },
   temp3:{
    type:'string',
    default:''
   },
   list:{
    type:'array',
    default:[
     {name:'name',default:'Nome',type:'text'},
     {name:'email',default:'Email',type:'email'}
    ]
   },
   button:{
    type:'string',
    default:''
   },
   url:{
    type:'string',
    default:''
   },
   image:{
    type:'string',
    default:''
   },
   termsOfUse:{
    type:'string',
    default:''
   },
   color:{
    type:'string',
    default:''
   },
   backgroundColor:{
    type:'string',
    default:''
   }
  },
  edit:x=>e(
   'div',
   p(),
   e(
    j,
    {style:{marginBottom:40}},
    e(
     v,
     {title:'Campo'},
     e('p',null,'Insira os campos:'),
     e(
      'div',
      {style:{display:'flex',flexDirection:'row'}},
      e(
       'div',
       {style:{display:'flex',flexDirection:'column'}},
       'Nome',
       e(
        'input',
        {
         value:x.attributes.temp1,
         type:'text',
         className:'FBGinput',
         onChange:n=>x.setAttributes({temp1:n.target.value})
        }
       )
      ),
      e(
       'div',
       {style:{display:'flex',flexDirection:'column'}},
       'valor',
       e(
        'input',
        {
         value:x.attributes.temp2,
         type:'text',
         className:'FBGinput',
         onChange:n=>x.setAttributes({temp2:n.target.value})
        }
       )
      ),
      e(
       'div',
       {style:{display:'flex',flexDirection:'column'}},
       'Tipo',
       e(
        'select',
        {
         value:x.attributes.temp3,
         type:'text',
         className:'FBGselect',
         onChange:n=>x.setAttributes({temp3:n.target.value})
        },
        ['text','cpf','cnpj','phone','url','decimal','money','email','password','number','date','time']
        .map(x=>e('option',{key:x,value:x},x))
       )
      ),
      e(
       'div',
       {style:{display:'flex',flexDirection:'column'}},
       '.',
       e(
        'input',
        {
         value:'+',
         type:'button',
         className:'FBGinput',
         style:{padding:'0 8px'},
         onClick:e=>{
          x.attributes.list.push({name:x.attributes.temp1,default:x.attributes.temp2,type:x.attributes.temp3});
          x.setAttributes({
           list:x.attributes.list.slice(),
           temp1:'',
           temp2:'',
           temp3:''
          })
         }
        }
       )
      )
     ),
     e(
      'ul',
      {className:'FBGListControls'},
      x.attributes.list.map((l,i)=>
       e(
        'li',
        {key:i},
        e('span',{value:l.name},
         l.name||'nome',
         e('sub',{value:l.name},`${l.type}-${l.default||'placeholder'}`)
        ),
        e(
         'span',
         {
          onClick:()=>{
           x.attributes.list.splice(i,1);
           x.setAttributes({list:x.attributes.list.slice()})
          }
         }
        )
       )
      )
     ),
     e(
      'div',
      {
       style:{
        borderTop:'1px solid gray',
        paddingTop:8,
        display:'flex',
        flexDirection:'column'
       }
      },
      'Termos de Uso:',
      e(
       'input',
       {
        value:x.attributes.termsOfUse,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({termsOfUse:n.target.value})
       }
      )
     )
    ),
    e(
     v,
     {title:'Imagem de Fundo'},
     e('p',null,'Selecione uma imagem de fundo:'),
     e(
      m,
      {
       value:x.attributes.image,
       type:'image',
       onSelect:n=>x.setAttributes({image:n.sizes?n.sizes.full.url:n.url}),
       render:x=>e(
        u,
        {
         onClick:x.open,
         icon:'upload',
         className:'editor-media-placeholder__button is-button is-default is-large'
        },
        'Background Image'
       )
      }
     )
    ),
    e(
     v,
     {title:'Cor do texto'},
     e('p',null,'Selecione a cor do texto:'),
     e(
      z,
      {
       value:x.attributes.color||'black',
       onChange:n=>x.setAttributes({color:n})
      }
     )
    ),
    e(
     v,
     {title:'Cor de Fundo'},
     e('p',null,'Selecione a cor de fundo:'),
     e(
      z,
      {
       value:x.attributes.backgroundColor||'silver',
       onChange:n=>x.setAttributes({backgroundColor:n})
      }
     )
    ),
    e(
     v,
     {title:'Envio'},
     e('p',null,'Selecione os dados do envio:'),
     e(
      'div',
      {style:{display:'flex',flexDirection:'column'}},
      'Botão enviar:',
      e(
       'input',
       {
        value:x.attributes.button||'Enviar',
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({button:n.target.value})
       }
      )
     ),
     e(
      'div',
      {style:{display:'flex',flexDirection:'column'}},
      'Url de envio:',
      e(
       'input',
       {
        value:x.attributes.url,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({url:n.target.value})
       }
      )
     )
    )
   ),
   e(
    b,
    {
     key:'controls'
    },
    e(a,{
     value:x.attributes.alignment,
     onChange:n=>x.setAttributes({alignment:n===undefined?'none':n})
    })
   ),
   e(
    'div',
    {
     style:{
      display:'flex',
      flexDirection:'column',
      alignItems:({left:'flex-start',center:'center',right:'flex-end'})[x.attributes.alignment],
      backgroundColor:x.attributes.backgroundColor||'silver',
      color:x.attributes.color||'black',
      backgroundImage:`url(${x.attributes.image})`,
      backgroundRepeat:'no-repeat',
      backgroundSize:'cover',
      backgroundPosition:'center',
      borderRadius:4,
      padding:'0 12px 12px 12px',
      margin:'16px 0 0 0'
     }
    },
    e(
     h,
     {
      key:'FBGrichtextTitle',
      tagName:'h1',
      style:{
       textAlign:x.attributes.alignment,
       margin:0,
       color:x.attributes.color,
       padding:0,
       fontSize:32
      },
      onChange:n=>x.setAttributes({title:n}),
      value:x.attributes.title,
      placeholder:'NewsLetter'
    }),
    e(
     h,
     {
      key:'FBGrichtextText',
      tagName:'p',
      style:{
       textAlign:x.attributes.alignment,
       color:x.attributes.color,
       margin:0,
       padding:0,
       color:x.attributes.color
      },
      onChange:n=>x.setAttributes({content:n}),
      value:x.attributes.content,
      placeholder:'Mensagem'
    }),
    e(
     'ul',
     {style:{listStyle:'none',padding:0}},
     x.attributes.list.map(l=>
      e(
       'li',
       {
        key:l.name,
        style:{
         textAlign:x.attributes.alignment,
         color:x.attributes.color,
         padding:0,
         margin:0
        }
       },
       e('div',
        {style:{color:x.attributes.color,display:'inline-block',width:100}},
        `${l.default}: `
       ),
       e(
        'input',
        {
         type:['text','password','number','date','time'].includes(l.type)?l.type:'text',
         name:l.name.replace(/\s+/g,'_').replace(/[^\w_]/g,''),
         style:{
          borderRadius:5,
          backgroundColor:'white',
          lineHeight:1,
          outline:0,
          fontSize:'12pt',
          color:'#ff7f00',
          border:'1px solid #808080'
         },
         placeholder:l.default,
         value:''
        }
       )
      )
     )
    ),
   e(
    'div',
    {
     style:{textAlign:x.attributes.alignment}
    },
    e(
     'input',
     {
      scale:'1.5',
      accentColor:'#ff7f00',
      type:'radio',
      name:'choice',
      value:'termsOfUse'
     }
    ),
    'Declaro que li e concordo com os ',
    e('a',{href:x.attributes.termsOfUse},'Termos de Uso'),
    '.'
   ),
    e(
     'div',
     {style:{display:'flex',flexDirection:'row',justifyContent:({left:'flex-start',center:'center',right:'flex-end'})[x.attributes.alignment]||'flex-end'}},
     e(
      'input',
      {
       type:'button',
       style:{
        borderRadius:5,
        cursor:'pointer',
        backgroundColor:'white',
        minHeight:30,
        lineHeight:1,
        outline:0,
        fontSize:'12pt',
        color:'#ff7f00',
        border:'1px solid #808080'
       },
       value:x.attributes.button||'Enviar'
      }
     )
    )
   )
  ),
  save:x=>e(
   'div',
   p.save()
  )
 });
 l.b.registerBlockType('fbg-plugin/hights',{
  title:'Posts de destaque',
  description:'Lista todos os posts de destaque selecionados em uma lista',
  icon:'embed-post',
  category:'fbg-plugin-category',
  attributes:{
   title:{
    type:'string',
    selector:'h1',
    default:''
   },
   color:{
    type:'string',
    default:''
   },
   posts:{
    type:'array',
    default:[]
   },
   backgroundColor:{
    type:'string',
    default:''
   },
   alignment:{
    type:'string',
    default:'none'
   }
  },
  edit:x=>e(
   'div',
   p(),
   e(
    j,
    {style:{marginBottom:40}},
    e(
     v,
     {title:'Posts'},
     e('p',null,'Selecione os posts de destaque:'),
     e(
      'div',
      {
       style:{
        display:'flex',
        justifyContent:'space-between',
        alignItems:'center',
        border:'1px solid gray',
        cursor:'pointer',
        borderRadius:4,
        padding:8,
        margin:0
       },
       onClick:n=>window.fbgSearch.show(p=>{
        x.attributes.posts.push(p);
        x.setAttributes({
         posts:x.attributes.posts.slice(),
         temp:''
        })
       })
      },
      'Selecionar POST',
      e('span',{className:'dashicon dashicons dashicons-search'})
     ),
     e(
      'ul',
      {className:'FBGListControls'},
      x.attributes.posts.map((l,i)=>
       e(
        'li',
        {
         key:l.externalId,
         data:l.id,
         draggable:true,
         onDrop:e=>fbgSelect.dragEnd(e,y=>x.setAttributes({
          posts:x.attributes.posts.slice()
           .reorder(y).slice()
         })),
         onDragOver:e=>fbgSelect.dragOver(e),
         onDrag:e=>fbgSelect.dragStart(e)
        },
        e(
         'span',
         {
          value:l.title,
          style: {
           overflow:'hidden',
           whiteSpace:'nowrap'
          }
         },
         l.title
        ),
        e(
         'span',
         {
          onClick:()=>{
           x.attributes.posts.splice(i,1);
           x.setAttributes({posts:x.attributes.posts.slice()})
          }
         }
        )
       )
      )
     )
    ),
    e(
     v,
     {title:'Cor do texto'},
     e(
      z,
      {
       value:x.attributes.color,
       onChange:n=>x.setAttributes({color:n})
      }
     )
    ),
    e(
     v,
     {title:'Cor de Fundo'},
     e(
      z,
      {
       value:x.attributes.backgroundColor,
       onChange:n=>x.setAttributes({backgroundColor:n})
      }
     )
    )
   ),
   e(
    b,
    {
     key:'controls'
    },
    e(a,{
     value:x.attributes.alignment,
     onChange:n=>x.setAttributes({alignment:n===undefined?'none':n})
    })
   ),
   e(
    'div',
    {
     style:{
      display:'flex',
      flexDirection:'column',
      alignItems:({left:'flex-start',center:'center',right:'flex-end'})[x.attributes.alignment],
      backgroundColor:x.attributes.backgroundColor||'silver',
      color:x.attributes.color||'black',
      borderRadius:4,
      padding:'0 12px 12px 12px',
      margin:'16px 0 0 0'
     }
    },
    e(
     h,
     {
      key:'FBGrichtextTitle',
      tagName:'h1',
      style:{
       textAlign:x.attributes.alignment,
       margin:0,
       padding:0,
       fontSize:32,
       color:x.attributes.color,
       position:'relative',
       marginTop:'-24px'
      },
      onChange:n=>x.setAttributes({title:n}),
      value:x.attributes.title,
      placeholder:'Destaques'
     }
    ),
    e(
     'ul',
     {
      className:'FBGListCount'
     },
     x.attributes.posts.map(l=>
      e('li',
       {
        key:l.externalId,
        style:{
         color:x.attributes.color,
         textAlign:x.attributes.alignment
        }
       },
       l.title
      )
     )
    )
   )
  ),
  save:x=>e(
   'div',
   p.save()
  )
 });
 l.b.registerBlockType('fbg-plugin/postview',{
  title:'Post Viewer',
  description:'Exibe um post em modo de destaque',
  icon:'embed-post',
  category:'fbg-plugin-category',
  attributes:{
   post:{
    type:'object',
    default:{}
   },
   noThumbnail:{
    type:'boolean',
    default:false
   }
  },
  edit:x=>e(
   'div',
   p(),
   e(
    j,
    {style:{marginBottom:40}},
    e(
     v,
     {title:'Posts'},
     e(
      'div',
      {
       style:{
        display:'flex',
        justifyContent:'space-between',
        alignItems:'center',
        border:'1px solid gray',
        cursor:'pointer',
        borderRadius:4,
        padding:8,
        margin:0
       },
       onClick:n=>window.fbgSearch.show(p=>x.setAttributes({post:p}))
      },
      'Selecionar POST',
      e('span',{className:'dashicon dashicons dashicons-search'})
     )
    ),
    e(
     v,
     {title:'Thumbnail'},
     e('p',null,'Omitir a exibição do thumbnail?'),
     e(
      'div',
      null,
      e(
       'label',
       {
        className:'FBGswitch'
       },
       e(
        'input',
        {
         type:'checkbox',
         checked:x.attributes.noThumbnail,
         onChange:n=>x.setAttributes({noThumbnail:n.target.checked})
        }
       ),
       e('span',{className:'FBGslider FBGround'})
      )
     )
    ),
    e(
     v,
     {title:'Imagem do post'},
     e('p',null,'Selecione uma imagem alternativa:'),
     e(
      m,
      {
       value:x.attributes.image,
       type:'image',
       onSelect:n=>{
        const v={...x.attributes.post};
        x.setAttributes({std:v.thumbnail});
        v.thumbnail=n.sizes?n.sizes.full.url:n.url;
        x.setAttributes({post:{...v}})
       },
       render:x=>e(
        u,
        {
         onClick:x.open,
         icon:'upload',
         className:'editor-media-placeholder__button is-button is-default is-large'
        },
        'Background Image'
       )
      }
     ),
     !!x.attributes.std?
     e(
      'button',
      {
       style:{
        border:0,
        backgroundColor:'transparent',
        cursor:'pointer',
        height:16
       },
       onClick:n=>{
        const v=x.attributes.std;
        x.setAttributes({std:undefined});
        x.attributes.post.thumbnail=v;
        x.setAttributes({post:{...x.attributes.post}})
       }
      },
      e('span',{style:{fontSize: 16},className:'dashicon dashicons dashicons-redo'})
     ):
     ''
    )
   ),
   e(
    b,
    {
     key:'controls'
    },
    e(
     'div',
     {
      style:{
       display:'flex',
       justifyContent:'center',
       alignItems:'center',
       cursor:'pointer',
       padding:8,
       margin:0
      },
      onClick:n=>window.fbgSearch.show(p=>x.setAttributes({post:p}))
     },
     e('span',{className:'dashicon dashicons dashicons-search'})
    )
   ),
   e(
    'div',
    {
     style:{
      display:'flex',
      flexDirection:'column',
      padding:8,
      margin:2,
      gap:10
     }
    },
    e(
     'div',
     {style:{display:'flex',flexBasis:'70%'}},
     e(
      'img',
      {
       src:x.attributes.noThumbnail?'':x.attributes.post?.thumbnail||'',
       style:{
        display:x.attributes.noThumbnail?'none':'block',
        backgroundColor:'silver',
        width:'100%'
       }
      }
     )
    ),
    e(
     'div',
     {style:{display:'flex',flexDirection:'column',flexBasis:'30%'}},
     e(
      'span',
      null,
      x.attributes.post?.category||''
     ),
     e(
      'h1',
      {style:{margin:0,padding:0,fontSize:18,fontWeight:'bolder'}},
      x.attributes.post?.title||''
     ),
     e(
      'div',
      {
       style:{
        display:'flex',
        flexDirection:'row',
        justifyContent:'space-between',
        marginBottom:8
       }
      },
      e(
       'small',
       null,
       x.attributes.post?.credit?.map(x=>x.name).join(', ')||''
      ),
      e(
       'span',
       {style:{whiteSpace:'nowrap'}},
       '0',
       e(
        'i',
        {
         className:"dashicon dashicons dashicons-thumbs-up",
         style:{width:28,height:28}
        }
       )
      )
     )
    )
   )
  ),
  save:x=>e(
   'div',
   p.save()
  )
 });
 l.b.registerBlockType('fbg-plugin/postslist',{
  title:'Lista personalizada de posts',
  description:'Lista personalizada de posts imagem pequena e lateral',
  icon:'embed-post',
  category:'fbg-plugin-category',
  attributes:{
   posts:{
    type:'array',
    default:[]
   },
   horizontal:{
    type:'boolean',
    default:false
   }
  },
  edit:x=>e(
   'div',
   p(),
   e(
    j,
    {style:{marginBottom:40}},
    e(
     v,
     {title:'Posts'},
     e('p',null,'Selecione os posts de destaque:'),
     e(
      'div',
      {
       style:{
        display:'flex',
        justifyContent:'space-between',
        alignItems:'center',
        border:'1px solid gray',
        cursor:'pointer',
        borderRadius:4,
        padding:8,
        margin:0
       },
       onClick:n=>window.fbgSearch.show(p=>{
        x.attributes.posts.unshift({...p,showThumbnail:true});
        x.setAttributes({
         posts:x.attributes.posts.slice(),
         temp:''
        })
       })
      },
      'Selecionar POST',
      e('span',{className:'dashicon dashicons dashicons-search'})
     ),
     e(
      'ul',
      {className:'FBGListControls'},
      x.attributes.posts.map((l,i)=>
       e(
        'li',
        {
         key:l.externalId,
         data:l.id,
         draggable:true,
         onDrop:e=>fbgSelect.dragEnd(e,y=>x.setAttributes({
          posts:x.attributes.posts.slice()
           .reorder(y).slice()
         })),
         onDragOver:e=>fbgSelect.dragOver(e),
         onDrag:e=>fbgSelect.dragStart(e)
        },
        e(
         'span',
         {
          value:l.title,
          style: {
           overflow:'hidden',
           whiteSpace:'nowrap'
          }
         },
         l.title
        ),
        e(
         'span',
         {
          className:'set dashicon dashicons dashicons-admin-generic',
          style: {
           color:x.attributes.id===i?'blue':'black'
          },
          onClick:()=>x.setAttributes({id:x.attributes.id===i?undefined:i})
         }
        ),
        e(
         'span',
         {
          onClick:()=>{
           x.attributes.posts.splice(i,1);
           x.setAttributes({posts:x.attributes.posts.slice()})
          }
         }
        )
       )
      )
     ),
     x.attributes.id!==undefined?
     e(
      'div',
      null,
      e(
       v,
       {title:'Thumbnail'},
       e('p',null,'Omitir a exibição do thumbnail?'),
       e(
        'div',
        null,
        e(
         'label',
         {
          className:'FBGswitch'
         },
         e(
          'input',
          {
           type:'checkbox',
           checked:x.attributes.posts[x.attributes.id]?.showThumbnail,
           onChange:n=>{
            const i=x.attributes.id,
            p=x.attributes.posts.slice();
            p[i].showThumbnail=!p[i].showThumbnail;
            x.setAttributes({posts:p.slice()})
           }
          }
         ),
         e('span',{className:'FBGslider FBGround'})
        )
       )
      ),
      e(
       v,
       {title:'Imagem do post'},
       e('p',null,'Selecione uma imagem alternativa:'),
       e(
        m,
        {
         value:x.attributes.posts[x.attributes.id]?.thumbnail,
         type:'image',
         onSelect:n=>{
          const i=x.attributes.id,
           p=x.attributes.posts.slice();
          x.setAttributes({std:p[i].thumbnail});
          p[i].thumbnail=n.sizes?n.sizes.full.url:n.url;
          x.setAttributes({posts:p.slice()})
         },
         render:x=>e(
          u,
          {
           onClick:x.open,
           icon:'upload',
           className:'editor-media-placeholder__button is-button is-default is-large'
          },
          'Background Image'
         )
        }
       ),
       !!x.attributes.std?
       e(
        'button',
        {
         style:{
          border:0,
          backgroundColor:'transparent',
          cursor:'pointer',
          height:16
         },
         onClick:n=>{
          const v=x.attributes.std,
           i=x.attributes.id,
           p=x.attributes.posts.slice();
          x.setAttributes({std:undefined});
          p[i].thumbnail=v;
          x.setAttributes({posts:p.slice()})
         }
        },
        e('span',{style:{fontSize: 16},className:'dashicon dashicons dashicons-redo'})
       ):
       ''
      )
     ):
     ''
    ),
    e(
     v,
     {title:'Alinhamento'},
     e('p',null,'Alinhar horizontalmente'),
     e(
      'div',
      null,
      e(
       'label',
       {
        className:'FBGswitch'
       },
       e(
        'input',
        {
         type:'checkbox',
         checked:x.attributes.horizontal,
         onChange:n=>x.setAttributes({horizontal:n.target.checked})
        }
       ),
       e('span',{className:'FBGslider FBGround'})
      )
     )
    )
   ),
   e(
    b,
    {
     key:'controls'
    },
    e(
     'div',
     {
      style:{
       display:'flex',
       justifyContent:'center',
       alignItems:'center',
       cursor:'pointer',
       padding:8,
       margin:0
      },
      onClick:n=>window.fbgSearch.show(p=>{
        x.attributes.posts.unshift({...p,showThumbnail:true});
        x.setAttributes({
         posts:x.attributes.posts.slice(),
         temp:''
        })
       })
     },
     e('span',{className:'dashicon dashicons dashicons-search'})
    )
   ),
   e(
    'div',
    {
     style:{
      display:'flex',
      flexDirection:'column',
      padding:'0 12px 12px 12px',
      margin:'16px 0 0 0'
     }
    },
    e(
     'ul',
     {
      className:!!x.attributes.horizontal?'FBGListPostsH':'FBGListPosts'
     },
     !!x.attributes.posts.length?
      x.attributes.posts.map(l=>
       e(
        'li',
        {key:l.externalId},
        e(
         'div',
         null,
         l.showThumbnail?
          e(
           'img',
           {src:l.thumbnail}
          ):
          '',
         e(
          'div',
          null,
          e(
           'div',
           null,
           l.title
          ),
          e(
           'small',
           null,
           l.credit.map(x=>x.name).join(', ')
          ),
          e(
           'div',
           {
            style:{
             display:'flex',
             flexDirection:'row',
             justifyContent:'space-between'
            }
           },
           e(
            'small',
            null,
            o(l.createdAt).toLocaleString('pt-br')
           ),
           e(
            'span',
            {style:{whiteSpace:'nowrap'}},
            '0',
            e(
             'i',
             {
              className:"dashicon dashicons dashicons-thumbs-up",
              style:{width:28,height:28}
             }
            )
           )
          )
         )
        )
       )
      ):
      'SEM POSTAGENS'
    )
   )
  ),
  save:x=>e(
   'div',
   p.save()
  )
 });
 l.b.registerBlockType('fbg-plugin/recipes',{
  title:'Receitas',
  description:'Bloco de receitas na página',
  icon:'welcome-write-blog',
  category:'fbg-plugin-category',
  attributes:{
   title:{
    type:'string',
    default:''
   },
   subtitle:{
    type:'string',
    default:''
   },
   time:{
    type:'string',
    default:''
   },
   yield:{
    type:'string',
    default:''
   },
   level:{
    type:'string',
    default:''
   },
   recipes:{
    type:'array',
    default:[]
   }
  },
  edit:x=>e(
   'div',
   {style:{display:'flex',flexDirection:'column'}},
   e(
    'h1',
    null,
    'Bloco de receitas'
   ),
   e(
    'table',
    {
     collapse:'collapse',
     cellpadding:0,
     cellspacing:8,
     border:0
    },
    e(
     'tr',
     null,
     e('td',{width:'1%',style:{whiteSpace:'nowrap'}},'Título:'),
     e(
      'td',
      null,
      e(
       'input',
       {
        value:x.attributes.title,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({title:n.target.value})
       }
      )
     )
    ),
    e(
     'tr',
     null,
     e('td',{width:'1%',style:{whiteSpace:'nowrap'}},'Subtítulo/Cheff:'),
     e(
      'td',
      null,
      e(
       'input',
       {
        value:x.attributes.subtitle,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({subtitle:n.target.value})
       }
      )
     )
    ),
    e(
     'tr',
     null,
     e('td',{width:'1%',style:{whiteSpace:'nowrap'}},'Tempo de preparo:'),
     e(
      'td',
      null,
      e(
       'input',
       {
        value:x.attributes.time,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({time:n.target.value})
       }
      )
     )
    ),
    e(
     'tr',
     null,
     e('td',{width:'1%',style:{whiteSpace:'nowrap'}},'Rendimento:'),
     e(
      'td',
      null,
      e(
       'input',
       {
        value:x.attributes.yield,
        type:'text',
        className:'FBGinput',
        onChange:n=>x.setAttributes({yield:n.target.value})
       }
      )
     )
    ),
    e(
     'tr',
     null,
     e('td',{width:'1%',style:{whiteSpace:'nowrap'}},'Grau de dificuldade:'),
     e(
      'td',
      null,
      e(
       'select',
       {
        style:{
         width:'100%'
        },
        value:x.attributes.level,
        className:'FBGselect',
        onChange:n=>x.setAttributes({level:n.target.value})
       },
       e('option',{value:'',selected:true,style:{display:'none'}},'Selecionar Nível'),
       e('option',{value:'Fácil'},'Fácil'),
       e('option',{value:'Médio'},'Médio'),
       e('option',{value:'Difícil'},'Difícil')
      )
     )
    )
   ),
   (x.attributes.recipes.length?x.attributes.recipes:[{ingredients:[],method:[]}]).map((_,i)=>
    e(
     'div',
     null,
     e(
      'div',
      {
       style:{
        display:'flex',
        justifyContent:'space-between',
        alignItems:'center',
        width:'100%',
        padding:0,
        margin:0
       }
      },
      e('h1',null,'Ingredientes'),
      e(
       'div',
       {
        style:{
         display:'flex',
         justifyContent:'space-between',
         alignItems:'center',
         border:'1px solid gray',
         cursor:'pointer',
         borderRadius:4,
         padding:8,
         margin:0
        },
        onClick:n=>{
         const b=x.attributes.recipes.slice();
         if(b.length)b.splice(i,1);
         x.setAttributes({recipes:b})
        }
       },
       'Remover',
       e('span',{style:{margin:'0 0 0 8px'},className:'dashicon dashicons dashicons-remove'})
      )
     ),
     e(
      h,
      {
       key:'FBGrichtextIngredients',
       tagName:'ul',
       style:{listStyleType:'disc'},
       onChange:n=>{
        const a=n.replace(/^<li[^>]*>/gi,'')
         .replace(/<\/li>$/gi,'')
          .replace(/<\/li><li[^>]*>/gi,'#|#')
          .split('#|#'),
         b=x.attributes.recipes.slice();
        if(b.length)b[i].ingredients=a;
        else b.push({ingredients:a,method:[]});
        x.setAttributes({recipes:b})
       },
       multiline:'li',
       value:`<li>${(x.attributes.recipes.length?x.attributes.recipes:[{ingredients:[],method:[]}])[i].ingredients.join('</li><li>')}</li>`,
       placeholder:'Receita'
     }),
     e(
      'div',
      {
       style:{
        display:'flex',
        justifyContent:'space-between',
        alignItems:'center',
        width:'100%',
        padding:0,
        margin:0
       }
      },
      !!x.attributes.recipes.length&&!!x.attributes.recipes[i].noMethod?
      e('span'):
      e('h1',null,'Modo de preparo'),
      e(
       'div',
       {
        style:{
         display:'flex',
         justifyContent:'space-between',
         alignItems:'center',
         cursor:'pointer',
         padding:8,
         margin:0
        },
        onClick:n=>{
         const b=x.attributes.recipes.slice();
         if(b.length)b[i].noMethod=!b[i].noMethod;
         x.setAttributes({recipes:b})
        }
       },
       e('span',{style:{margin:'0 0 0 8px'},className:'dashicon dashicons dashicons-'+(!!x.attributes.recipes.length&&!!x.attributes.recipes[i].noMethod?'yes':'no')})
      )
     ),
     !!x.attributes.recipes.length&&!!x.attributes.recipes[i].noMethod?
     e('span'):
     e(
      h,
      {
       key:'FBGrichtextMethod',
       tagName:'ul',
       style:{listStyleType:'decimal'},
       onChange:n=>{
        const a=n.replace(/^<li[^>]*>/gi,'')
         .replace(/<\/li>$/gi,'')
          .replace(/<\/li><li[^>]*>/gi,'#|#')
          .split('#|#'),
         b=x.attributes.recipes.slice();
        if(x.attributes.recipes.length)b[i].method=a;
        else b.push({ingredients:[],method:a});
        x.setAttributes({recipes:b})
       },
       multiline:'li',
       value:`<li>${(x.attributes.recipes.length?x.attributes.recipes:[{ingredients:[],method:[]}])[i].method.join('</li><li>')}</li>`,
       placeholder:'Modo de preparo'
     })
    )
   ),
   e(
    'div',
    {
     style:{
      display:'flex',
      justifyContent:'space-between',
      alignItems:'center',
      cursor:'pointer',
      padding:0,
      margin:0
     }
    },
    e('span'),
    e(
     'div',
     {
      style:{
       display:'flex',
       justifyContent:'space-between',
       alignItems:'center',
       border:'1px solid gray',
       cursor:'pointer',
       borderRadius:4,
       padding:8,
       margin:'4px 0 0 0'
      },
      onClick:n=>{
       const b=x.attributes.recipes.slice();
       if(!b.length)b.push({ingredients:[],method:[]});
       b.push({ingredients:[],method:[]});
       x.setAttributes({recipes:b})
      }
     },
     'Adicionar receita',
     e('span',{style:{margin:'0 0 0 8px'},className:'dashicon dashicons dashicons-insert'})
    )
   )
  ),
  save:x=>e(
   'div',
   p.save()
  )
 })
})({
 b:window.wp.blocks,
 d:window.wp.blockEditor,
 e:window.wp.element,
 v:wp.components
});
(()=>{
  const r=fetch('/wp-json/wp/v2/posts?filter[orderby]=date&order=desc&page=1&per_page=100')
  .then(x=>x.json())
  .then(x=>{
   window.fbgposts=x.map(x=>({
    title:x.title.rendered,
    date:new Date(`${x.date}Z`)
   }))
  })
 }
)();
Array.prototype.reorder=function(x,y){return _.sortBy(this,e=>_.indexOf(x,e[y||'id']))};
window.fbgSelect={
 selected:null,
 n:(x,y)=>{
  let cur;
  if(y.parentNode===x.parentNode)
    for(cur=x.previousSibling;cur;cur=cur.previousSibling)
      if(cur===y)return true;
  return false
 },
 v:(x,y)=>(
  y.parentNode?.nodeName.toLowerCase()==='li'||
  y?.nodeName.toLowerCase()==='li')&&(
  x.parentNode?.nodeName.toLowerCase()==='ul'||
  x?.nodeName.toLowerCase()==='ul'
 ),
 k:(n,t)=>{
  while(n.nodeName.toUpperCase()!=t.toUpperCase()&&
   n.nodeName.toUpperCase()!='BODY'
  )n=n.parentElement;
  return n
 },
 dragOver:e=>{
  e.preventDefault();
  const l=fbgSelect.k(e.target,'li');
  if(fbgSelect.n(fbgSelect.selected,l))e.target.parentNode.insertBefore(fbgSelect.selected,l);
  else e.target.parentNode.insertBefore(fbgSelect.selected,l.nextSibling)
 },
 dragEnd:(e,f)=>{
  e.preventDefault();
  f(Array.from(
   fbgSelect.k(e.target,'ul')
   .getElementsByTagName('li')
  ).map(x=>+x.getAttribute('data')));
  fbgSelect.selected=null
 },
 dragStart:e=>{
  e.dataTransfer.effectAllowed='move';
  e.dataTransfer.setData('text/plain',null);
  fbgSelect.selected=fbgSelect.k(e.target,'li')
 }
};
window.fbgSearch={
 c:null,
 f:null,
 z:null,
 n:null,
 g:false,
 r:async()=>{
  if(fbgSearch.g)return;
  fbgSearch.g=true;
  const o=fbgSearch.n.getElementsByTagName('table')[0],
   i=fbgSearch.n.getElementsByTagName('input')[0];
  let r,d;
  o.innerHTML='';
  r=document.createElement('tr');
  r.setAttribute('key','0');
  ['Título','Categoria','Data de Publicação'].map(x=>{
   d=document.createElement('th');
   d.innerHTML=x;
   r.appendChild(d)
  });
  o.appendChild(r);
  (await fbgSearch.a(i.value)).map((y,i)=>{
   r=document.createElement('tr');
   r.post=y;
   r.setAttribute('key',(i+1).toString());
   r.onclick=e=>{
    fbgSearch.f(
     fbgSearch.n.getElementsByTagName('table')[0]
      .getElementsByTagName('tr')[
       +(e.target.nodeName==='tr'?
        e.target:
        e.target.parentElement
       ).getAttribute('key')
      ].post
    );
    fbgSearch.c()
   };
   ['title','category','createdAt'].map(x=>{
    d=document.createElement('td');
    d.innerHTML=y[x];
    r.appendChild(d)
   })
   o.appendChild(r)
  })
  fbgSearch.g=false
 },
 a:async(s,p,z)=>{
  p=p||1;
  z=z||20;
  const q={
   from:z*p-z,
   size:z,
   sort:[{createdAt:{order:"desc"}}]
  };
  if(!!s)q.query={bool:{should:[
   {match_phrase:{title:s}},
   {match_phrase:{slug:s}}
  ]}};
  const r=await fetch("/wp-json/fbgfilter/search",{
   method:'POST',
   headers:{"Content-type":"application/json"},
   body:JSON.stringify(q)
  });
  if(r.status===200)
   return (await r.json())
    .map(x=>({
     id:(new Date).getTime(),
     externalId:x.externalId,
     uri:x.uri,
     title:x.title,
     slug:x.slug,
     thumbnail:x.thumbnail,
     category:x.taxonomies?.category?.filter(x=>x.isPrimary)[0]?.name||'',
     credit:x.taxonomies?.credit,
     createdAt:x.createdAt
    }));
  else return []
 },
 show:f=>{
  let t,e;
  fbgSearch.f=f;
  fbgSearch.z=document.createElement('div');
  fbgSearch.z.style.width='100vw';
  fbgSearch.z.style.height='100vh';
  fbgSearch.z.style.display='flex';
  fbgSearch.z.style.justifyContent='center';
  fbgSearch.z.style.alignItems='center';
  fbgSearch.z.style.position='fixed';
  fbgSearch.z.style.top=0;
  fbgSearch.z.style.left=0;
  fbgSearch.z.style.backgroundColor='#00000080';
  document.body.appendChild(fbgSearch.z);
  fbgSearch.c=()=>{
   if(fbgSearch.g)return;
   fbgSearch.z.remove();
   fbgSearch.c=null;
   fbgSearch.f=null;
   fbgSearch.z=null;
   fbgSearch.n=null
  };
  fbgSearch.n=document.createElement('div');
  fbgSearch.n.style.width='80%';
  fbgSearch.n.style.height='80%';
  fbgSearch.n.style.backgroundColor='#ffffff';
  fbgSearch.z.appendChild(fbgSearch.n);
  t=document.createElement('table');
  t.className='FBGSelection';
  t.style.height='calc(100% - 6px)';
  fbgSearch.n.appendChild(t);
  fbgSearch.n=t;
  t=document.createElement('tr');
  e=document.createElement('td');
  e.className='title';
  e.innerHTML='Selecione o POST';
  t.appendChild(e);
  e=document.createElement('td');
  e.className='close';
  e.onclick=()=>fbgSearch.c();
  t.appendChild(e);
  fbgSearch.n.appendChild(t);
  t=document.createElement('tr');
  e=document.createElement('td');
  e.colSpan=2;
  t.appendChild(e);
  fbgSearch.n.appendChild(t);
  t=document.createElement('input');
  t.type='text';
  t.style.width='calc(100% - 32px)';
  t.onkeyup=e=>{if('Enter'===event.key)fbgSearch.r()};
  e.appendChild(t);
  t=document.createElement('div');
  t.className='dashicon dashicons dashicons-search';
  t.style.cursor='pointer';
  t.style.borderRadius='4px';
  t.style.border='1px solid gray';
  t.style.width='28px';
  t.style.height='28px';
  t.style.display='inline-flex';
  t.style.justifyContent='center';
  t.style.alignItems='center';
  t.onclick=()=>fbgSearch.r();
  e.appendChild(t);
  t=document.createElement('tr');
  e=document.createElement('td');
  e.colSpan=2;
  e.style.height='100%';
  t.appendChild(e);
  fbgSearch.n.appendChild(t);
  t=document.createElement('div');
  t.style.height='100%';
  t.style.overflow='auto';
  e.appendChild(t);
  e=document.createElement('table');
  t.appendChild(e);
  fbgSearch.r()
 }
};